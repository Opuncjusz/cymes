diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 933b647..0b83b5a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-bin.zip
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-bin.zip
diff --git a/src/main/java/pl/com/bottega/cymes/admin/Show.java b/src/main/java/pl/com/bottega/cymes/admin/Show.java
index 1ae7acf..7c9e0a7 100644
--- a/src/main/java/pl/com/bottega/cymes/admin/Show.java
+++ b/src/main/java/pl/com/bottega/cymes/admin/Show.java
@@ -1,17 +1,19 @@
 package pl.com.bottega.cymes.admin;
 
-import lombok.AllArgsConstructor;
-import lombok.Builder;
-import lombok.NoArgsConstructor;
-
-import javax.persistence.Id;
-import javax.persistence.ManyToOne;
 import java.math.BigDecimal;
 import java.time.Instant;
 import java.util.Map;
 import java.util.UUID;
 
-//@Entity
+import javax.persistence.Entity;
+import javax.persistence.Id;
+import javax.persistence.ManyToOne;
+
+import lombok.AllArgsConstructor;
+import lombok.Builder;
+import lombok.NoArgsConstructor;
+
+@Entity
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
diff --git a/src/main/java/pl/com/bottega/cymes/admin/ShowRepository.java b/src/main/java/pl/com/bottega/cymes/admin/ShowRepository.java
index d86aa70..b258fd7 100644
--- a/src/main/java/pl/com/bottega/cymes/admin/ShowRepository.java
+++ b/src/main/java/pl/com/bottega/cymes/admin/ShowRepository.java
@@ -1,6 +1,11 @@
 package pl.com.bottega.cymes.admin;
 
-public interface ShowRepository {
+import java.util.UUID;
+
+import org.springframework.data.repository.Repository;
+
+
+public interface ShowRepository extends Repository<Show, UUID> {
 
     void save(Show show);
 
diff --git a/src/main/java/pl/com/bottega/cymes/admin/adapters/AdminEndpoints.java b/src/main/java/pl/com/bottega/cymes/admin/adapters/AdminEndpoints.java
index 0a6541d..663d3f7 100644
--- a/src/main/java/pl/com/bottega/cymes/admin/adapters/AdminEndpoints.java
+++ b/src/main/java/pl/com/bottega/cymes/admin/adapters/AdminEndpoints.java
@@ -1,11 +1,18 @@
 package pl.com.bottega.cymes.admin.adapters;
 
-import lombok.AllArgsConstructor;
+import java.util.HashSet;
+import java.util.Set;
+
+import javax.transaction.Transactional;
+
+import org.springframework.context.ApplicationEventPublisher;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.PutMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
+
+import lombok.AllArgsConstructor;
 import pl.com.bottega.cymes.admin.Cinema;
 import pl.com.bottega.cymes.admin.CinemaHall;
 import pl.com.bottega.cymes.admin.CinemaHallRepository;
@@ -19,10 +26,7 @@ import pl.com.bottega.cymes.admin.MovieRepository;
 import pl.com.bottega.cymes.admin.Show;
 import pl.com.bottega.cymes.admin.ShowRepository;
 import pl.com.bottega.cymes.admin.UpdateCinema;
-
-import javax.transaction.Transactional;
-import java.util.HashSet;
-import java.util.Set;
+import pl.com.bottega.cymes.events.ShowCreated;
 
 @RestController
 @RequestMapping("/admin")
@@ -33,15 +37,16 @@ public class AdminEndpoints {
     private MovieRepository movieRepository;
     private CinemaHallRepository cinemaHallRepository;
     private ShowRepository showRepository;
+    private ApplicationEventPublisher eventPublisher;
 
     @PostMapping("/cinemas")
     @Transactional
     public void createCinema(@RequestBody CreateCinema createCinema) {
         Cinema cinema = Cinema.builder()
-            .city(createCinema.city)
-            .id(createCinema.cinemaId)
-            .name(createCinema.name)
-            .build();
+                .city(createCinema.city)
+                .id(createCinema.cinemaId)
+                .name(createCinema.name)
+                .build();
         cinema = cinemaRepository.save(cinema);
     }
 
@@ -57,12 +62,12 @@ public class AdminEndpoints {
     @Transactional
     public void createMovie(@RequestBody CreateMovie createMovie) {
         Movie movie = Movie.builder()
-            .movieId(createMovie.movieId)
-            .title(createMovie.title)
-            .description(createMovie.description)
-            .actors(createMovie.actors)
-            .genres(createMovie.genres)
-            .build();
+                .movieId(createMovie.movieId)
+                .title(createMovie.title)
+                .description(createMovie.description)
+                .actors(createMovie.actors)
+                .genres(createMovie.genres)
+                .build();
         movieRepository.save(movie);
     }
 
@@ -71,23 +76,26 @@ public class AdminEndpoints {
     public void createHall(@RequestBody CreateCinemaHall cmd) {
         Cinema cinema = cinemaRepository.findById(cmd.cinemaId);
         CinemaHall cinemaHall = CinemaHall.builder()
-            .cinema(cinema)
-            .id(cmd.cinemaId)
-            .name(cmd.hallName)
-            .hallElements(mapHallElements(cmd.seats))
-            .build();
+                .cinema(cinema)
+                .id(cmd.cinemaId)
+                .name(cmd.hallName)
+                .hallElements(mapHallElements(cmd.seats))
+                .build();
         cinemaHallRepository.save(cinemaHall);
     }
 
     @PostMapping("/cinemas/shows")
     public void createShow(@RequestBody CreateShow createShow) {
         Show show = Show.builder()
-            .cinemaHall(cinemaHallRepository.getOne(createShow.hallId))
-            .id(createShow.showId)
-            .movie(movieRepository.getOne(createShow.movieId))
-            .pricing(createShow.pricing)
-            .time(createShow.time)
-            .build();
+                .cinemaHall(cinemaHallRepository.getOne(createShow.hallId))
+                .id(createShow.showId)
+                .movie(movieRepository.getOne(createShow.movieId))
+                .pricing(createShow.pricing)
+                .time(createShow.time)
+                .build();
+        showRepository.save(show);
+        eventPublisher.publishEvent(new ShowCreated(createShow.showId));
+
     }
 
     private Set<CinemaHall.HallElement> mapHallElements(String[][] seats) {
diff --git a/src/main/java/pl/com/bottega/cymes/events/ShowCreated.java b/src/main/java/pl/com/bottega/cymes/events/ShowCreated.java
new file mode 100644
index 0000000..ffd8fa3
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/events/ShowCreated.java
@@ -0,0 +1,14 @@
+package pl.com.bottega.cymes.events;
+
+import java.util.UUID;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import pl.com.bottega.cymes.commons.Event;
+
+@AllArgsConstructor
+@Getter
+public class ShowCreated implements Event {
+
+    private UUID showId;
+}
diff --git a/src/main/java/pl/com/bottega/cymes/reservations/adapters/db/JPAShowReservationsRepository.java b/src/main/java/pl/com/bottega/cymes/reservations/adapters/db/JPAShowReservationsRepository.java
new file mode 100644
index 0000000..6a09052
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/reservations/adapters/db/JPAShowReservationsRepository.java
@@ -0,0 +1,47 @@
+package pl.com.bottega.cymes.reservations.adapters.db;
+
+import java.util.UUID;
+
+import javax.persistence.Entity;
+import javax.persistence.EntityManager;
+import javax.persistence.Id;
+import javax.transaction.Transactional;
+
+import org.springframework.stereotype.Repository;
+
+import lombok.AllArgsConstructor;
+import lombok.Builder;
+import lombok.NoArgsConstructor;
+import pl.com.bottega.cymes.reservations.domain.ShowReservations;
+import pl.com.bottega.cymes.reservations.domain.ShowReservationsExporter;
+import pl.com.bottega.cymes.reservations.domain.ShowReservationsRepository;
+
+@Repository
+@AllArgsConstructor
+public class JPAShowReservationsRepository implements ShowReservationsRepository {
+
+    private EntityManager entityManager;
+
+    @Override
+    @Transactional
+    public void save(ShowReservations showReservations) {
+        ShowReservationRecord record = new ShowReservationRecord();
+        showReservations.export(record);
+        entityManager.persist(record);
+    }
+}
+
+@Entity
+@AllArgsConstructor
+@NoArgsConstructor
+@Builder
+class ShowReservationRecord implements ShowReservationsExporter {
+
+    @Id
+    private UUID showId;
+
+    @Override
+    public void addShowId(UUID showId) {
+        this.showId = showId;
+    }
+}
diff --git a/src/main/java/pl/com/bottega/cymes/reservations/adapters/listeners/ShowCreatedListener.java b/src/main/java/pl/com/bottega/cymes/reservations/adapters/listeners/ShowCreatedListener.java
new file mode 100644
index 0000000..67ad1ff
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/reservations/adapters/listeners/ShowCreatedListener.java
@@ -0,0 +1,20 @@
+package pl.com.bottega.cymes.reservations.adapters.listeners;
+
+import org.springframework.context.event.EventListener;
+import org.springframework.stereotype.Component;
+
+import lombok.AllArgsConstructor;
+import pl.com.bottega.cymes.events.ShowCreated;
+import pl.com.bottega.cymes.reservations.domain.ShowCreatedHandler;
+
+@Component
+@AllArgsConstructor
+public class ShowCreatedListener {
+
+    private ShowCreatedHandler showCreatedHandler;
+
+    @EventListener
+    public void handleShowCreated(ShowCreated showCreated) {
+        showCreatedHandler.handle(showCreated);
+    }
+}
diff --git a/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowCreatedHandler.java b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowCreatedHandler.java
new file mode 100644
index 0000000..fff9e17
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowCreatedHandler.java
@@ -0,0 +1,18 @@
+package pl.com.bottega.cymes.reservations.domain;
+
+import org.springframework.stereotype.Component;
+
+import lombok.AllArgsConstructor;
+import pl.com.bottega.cymes.events.ShowCreated;
+
+@Component
+@AllArgsConstructor
+public class ShowCreatedHandler {
+
+    private ShowReservationsRepository showReservationsRepository;
+
+    public void handle(ShowCreated showCreated) {
+        ShowReservations showReservations = new ShowReservations(showCreated.getShowId());
+        showReservationsRepository.save(showReservations);
+    }
+}
diff --git a/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservations.java b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservations.java
new file mode 100644
index 0000000..a026c9f
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservations.java
@@ -0,0 +1,18 @@
+package pl.com.bottega.cymes.reservations.domain;
+
+
+import java.util.UUID;
+
+
+public class ShowReservations {
+
+    public ShowReservations(UUID showId) {
+        this.showId = showId;
+    }
+
+    private UUID showId;
+
+    public void export(ShowReservationsExporter exporter) {
+        exporter.addShowId(showId);
+    }
+}
diff --git a/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservationsExporter.java b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservationsExporter.java
new file mode 100644
index 0000000..ea336f4
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservationsExporter.java
@@ -0,0 +1,8 @@
+package pl.com.bottega.cymes.reservations.domain;
+
+import java.util.UUID;
+
+public interface ShowReservationsExporter {
+
+    public void addShowId(UUID showId);
+}
diff --git a/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservationsRepository.java b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservationsRepository.java
new file mode 100644
index 0000000..3beac63
--- /dev/null
+++ b/src/main/java/pl/com/bottega/cymes/reservations/domain/ShowReservationsRepository.java
@@ -0,0 +1,7 @@
+package pl.com.bottega.cymes.reservations.domain;
+
+
+public interface ShowReservationsRepository {
+
+    void save(ShowReservations showReservations);
+}
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
index 1519039..10c1525 100644
--- a/src/main/resources/application.yml
+++ b/src/main/resources/application.yml
@@ -1,3 +1,4 @@
+server.port: 8092
 spring:
   h2.console:
     enabled: true
